https://www.codechef.com/problems/MEXTREEMN

# cook your dish here
from collections import defaultdict,deque
# ans=1
import sys
sys.setrecursionlimit(1<<30)
def solve():
    n=int(input())
    g=defaultdict(list)
    deg=[0]*(n+1)
    label=[0]*(n+1)
    idx=0
    for _ in range(n-1):
        u,v=map(int,input().split())
        g[u].append(v)
        g[v].append(u)
        deg[u]+=1
        deg[v]+=1
    q=deque([i for i in range(1,n+1) if deg[i]==1])
    root=-1
    while q:
        node = q.popleft()
        label[node]=idx
        if idx==0: root = node
        idx+=1
        for nei in g[node]:
            deg[nei]-=1
            if deg[nei]==1:
                q.append(nei)
    
    ans=1
    # mex=1
    node,vis,cur_mex=root,[False]*(n+1),1
    vis[root]=True
    vis_label=[False]*n
    vis_label[label[root]]=True
    def dfs(node,vis,cur_mex):
        nonlocal ans
        for nei in g[node]:
            if vis[nei]==False:
                vis[nei]=True
                vis_label[label[nei]]=True
                
                old_mex=cur_mex
                while cur_mex<=n-1 and vis_label[cur_mex]:
                    cur_mex+=1
                ans+=cur_mex
                dfs(nei,vis,cur_mex)
                cur_mex=old_mex
                
                vis[nei]=False
                vis_label[label[nei]]=False
    dfs(node,vis,cur_mex)
    print(ans)
for _ in range(int(input())):
    solve()
'''
    1(3)
2(0) 3(1) 4(2)

1 0 0 0 1 0 0 2 1 0
1+00000    


'''
