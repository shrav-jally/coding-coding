https://takeuforward.org/plus/dsa/problems/subset-sum-equals-to-target

# Recursion – Exponential O(2^N)
class Solution:
    def isSubsetSum(self, arr, target):
        def solve(n, t):
            if t == 0:
                return True
            if n == 0:
                return False
            if arr[n-1] <= t:
                return solve(n-1, t-arr[n-1]) or solve(n-1, t)
            else:
                return solve(n-1, t)
        return solve(len(arr), target)

# Dynamic Programming – O(N * target)
class Solution:
    def isSubsetSum(self, arr, target):
        n = len(arr)
        dp = [[False] * (target + 1) for _ in range(n + 1)]
        for i in range(n + 1):
            dp[i][0] = True
        for i in range(1, n + 1):
            for j in range(1, target + 1):
                if arr[i - 1] <= j:
                    dp[i][j] = dp[i - 1][j - arr[i - 1]] or dp[i - 1][j]
                else:
                    dp[i][j] = dp[i - 1][j]
        return dp[n][target]
