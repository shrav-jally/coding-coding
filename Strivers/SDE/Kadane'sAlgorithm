https://takeuforward.org/plus/dsa/problems/kadane's-algorithm

O(nÂ²) time, O(1) space

class Solution:
    def maxSubArray(self, nums):
        max_sum = nums[0]
        for i in range(len(nums)):
            current_sum = 0
            for j in range(i, len(nums)):
                current_sum += nums[j]
                max_sum = max(max_sum, current_sum)
        return max_sum

#another solution

O(n) time, O(1) space

class Solution:
    def maxSubArray(self, nums):
        max_sum = current_sum = nums[0]
        for num in nums[1:]:
            current_sum = max(num, current_sum + num)
            max_sum = max(max_sum, current_sum)
        return max_sum
