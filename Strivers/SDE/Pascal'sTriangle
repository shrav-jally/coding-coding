https://takeuforward.org/plus/dsa/problems/pascal's-triangle

#O(n²) time, O(n²) space

class Solution:
    def generate(self, numRows):
        res = []
        for i in range(numRows):
            temp = [1] * (i + 1)
            for j in range(1, i):
                temp[j] = res[i - 1][j - 1] + res[i - 1][j]
            res.append(temp)
        return res

#O(n²) time, O(1)

class Solution:
    def generate(self, numRows):
        res = []
        for i in range(numRows):
            row = [1]
            val = 1
            for j in range(1, i + 1):
                val = val * (i - j + 1) // j
                row.append(val)
            res.append(row)
        return res
