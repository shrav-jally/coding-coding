https://takeuforward.org/plus/dsa/problems/fractional-knapsack

# Greedy â€“ O(N log N)
class Solution:
    def fractionalKnapsack(self, val, wt, capacity):
        items = sorted(zip(val, wt), key=lambda x: x[0]/x[1], reverse=True)
        total = 0.0
        for v, w in items:
            if capacity >= w:
                total += v
                capacity -= w
            else:
                total += v * (capacity / w)
                break
        return round(total, 6)
